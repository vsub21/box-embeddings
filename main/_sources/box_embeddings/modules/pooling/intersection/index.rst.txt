:mod:`box_embeddings.modules.pooling.intersection`
==================================================

.. py:module:: box_embeddings.modules.pooling.intersection


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   box_embeddings.modules.pooling.intersection.HardIntersectionBoxPooler



Functions
~~~~~~~~~

.. autoapisummary::

   box_embeddings.modules.pooling.intersection.hard_intersection_pooler


.. function:: hard_intersection_pooler(boxes: box_embeddings.parameterizations.box_tensor.BoxTensor, mask: torch.BoolTensor = None, dim: int = 0, keepdim: bool = False) -> box_embeddings.parameterizations.box_tensor.BoxTensor


.. class:: HardIntersectionBoxPooler(dim: int = 0, keepdim: bool = False)


   Bases: :class:`box_embeddings.modules.pooling.pooling.BoxPooler`

   Pools a box tensor using hard intersection operation

   .. method:: forward(self, box_tensor: box_embeddings.parameterizations.box_tensor.BoxTensor, mask: torch.BoolTensor = None) -> box_embeddings.parameterizations.box_tensor.BoxTensor


   .. method:: register(cls: Type[T], name: str, constructor: str = None, exist_ok: bool = False) -> Callable[([Type[T]], Type[T])]
      :classmethod:

      Transparent method

      :param name: TODO
      :param constructor: TODO
      :param exist_ok: TODO

      :returns: a wrapped callable



